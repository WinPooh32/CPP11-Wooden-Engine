Project Report By Aaron Cook

The goal of our project was to design a Level Editor and Map System for the Wooden_Engine, a Linux based game engine.  We got the idea for this project when we were browsing projects on Github. We looked at lot of different repositories but we decided on something game related because of our interests in game design. 

The Project began with brainstorming. We talked and tried to figure out exactly what we would could do in order to improve the game engine. We came to the agreement that we could create a Level Editor for the game engine. This level editor would be able to speed up and simplify level creation for game designers wishing to use the Wooden_Engine. Once we had the idea, we began making the list of everything that we would need to accomplish in order to create this Level Editor. We decided that there was a lot of things that we needed to do in order to actually create the level editor. These objectives were organized as learning linuix, modifying the Wooden_Engine to support the maps, Creating a Level editor and making the pipeline between the Wooden_Engine and the Level Editor. 

I started learning linuix and learning how I could create a UI for the level editor. Learning linuix wasn’t too hard but learning how I could make a UI took a while. The approach I took for the UI was a program called QT. QT was an awesome program for this because it allowed you to design a interface visually and then you would be able to associate your code with it. In order to learn this program I went through a few tutorials. Once I got a firm grasp of the program I began programming for the Level Editor’s GUI. The Gui consisted of a 16 by 12 grid of butotns. Each of these buttons represented a square on the map and by clicking it you could shift through the different tile types. Some of these tile types would be grass, fire, water or walls. The GUI also supported a save and load button and they would work by saving the current state of each button to a text file. I was able to get the GUI working but because there was 192 buttons I was unable to implement them all and because QT created widgets I wasn’t able to use recursion in order to generate the buttons and functionality of the buttons. This lead to the need more an alternative way to make the GUI for the map editor. 

We discussed a few possible ideas and the two results were a GUI using Java Swing and creating a GUI in terminal using c++. We wanted to do the Java choice because we had a lot of experience with it but we decided against it because we thought we might get points taken off. We started working on the GUI using c++ in terminal. We created a grid and a input that allows you to change specific cells in the grid. Now that we got the grid to display our next objective was the pipeline that accepts maps and sends maps from the level editor. I began working on the Load for the map editor. The Load was done by the reading each element of a file and assigning them to the current map in the GUI. At the point I added the exit and clear for the GUI. I got the Load to display the map but the problem was the with would be off by a few x units. We collaborated in order to find the fix for this and we were eventually able to. 
This project helped me to realize how important communication is in programming. Every step along the way required a lot of coordination.  Talking about our objective and dividing the work was really hard. We would often come up with the problem where multiple individuals starting doing the same task. We noticed this and we fixed it by further discussing our unique roles going forward. 

Finishing the project was also a very large part. After working on the different sections of the project. We needed to integrate them and test them. This was really important because there were a few bugs that we found during this process. This was also the point where we were able to polish the program. This made the program better for the user. At this point, we were able to write the ReadMe and this report. Being able to see the project come together and we were all able to make some really cool maps through out editor and we were able to see them in game.   
